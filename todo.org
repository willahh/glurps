#+TITLE+ Glurps
* TODO CRUD
** DONE Trash
** TODO List in update mode where all fields are in update mode
** TODO List order asc desc
** TODO List pagination
** TODO List filter sub form
** TODO List layout configuration
*** TODO Columns to display "id", "order", "..."
** TODO List import xml
** TODO List import json
** TODO List export xml
** TODO List export json
** TODO List REST Preview
** TODO List inner scroll
   http://www.cssplay.co.uk/menu/tablescroll.html
** TODO List sort asc desc
** TODO List edit multiple
** TODO List delete multiple
** TODO List enable multiple
** TODO List / Thumb switch
** TODO Image gallery
** TODO Fav true/false
** TODO Clone
** TODO Order up
** TODO Order down
* TODO Administration
** TODO User CRUD
** TODO Group CRUD
** TODO Role CRUD
** TODO Authentification
** TODO Email service
** TODO Forgot password
* TODO Implement couchdb
** Couchimport
------>
https://github.com/glynnbird/couchimport
sudo npm install -g couchimport

Export :
couchexport --url http://localhost:5984 --database animaldb --delimiter "," >
test.csv

Import : 
cat ~/test.tsv | couchimport
 http://docs.couchdb.org/en/2.1.1/intro/tour.html
  https://github.com/pouchdb-community/pouchdb-dump-cli

   Dump :
#+BEGIN_SRC shell
curl -X GET http://127.0.0.1:5984/glurps/_all_docs\?include_docs\=true



npm install -g pouchdb-dump-cli
pouchdb-dump http://localhost:5984/glurps > dump.txt
pouchdb-dump http://localhost:5984/glurps > dump.txt
#+END_SRC  


https://github.com/pouchdb-community/pouchdb-load
   Import :
#+BEGIN_SRC shell
npm install -g pouchdb-load
#+END_SRC

* TODO https
  https://stackoverflow.com/a/28034335/8000017
* TODO REST API
  Tests can be made through Postman application
* TODO Locales file
* TODO Service worker
  Implements a javascript service worker in admin to display some user
  information in live.
  Examples :
    - User do an insert from a form, click to submit :
      - Process is made in background
      - User is redirected on the list
      - .. when finished, a dialog appear to display the process informations and
      a button to reload the page
* TODO Locales fr en file
* DONE Get POST form works
* TODO Page admin/log : Add filter from level or type
* TODO Logger
** TODO Use cache - future is good but should not be called on every calls,
   Check for the use of channels with core.async
** TODO Generate one file per day
** TODO Implements clojure.java.io stream
* TODO Events panel with service worker
* TODO Events panel
* TODO Database connnector -> mysql or graphdb
